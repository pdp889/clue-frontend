{"version":3,"sources":["GameComponents/Summary.js","GameComponents/Board.js","FormComponents/OpponentForm.js","FormComponents/ClueForm.js","FormComponents/UserForm.js","FormComponents/PlayerCard.js","FormComponents/PlayerList.js","FormComponents/Forms.js","HeaderComponents/Header.js","GameComponents/addMove.js","AuthComponents/LoginPage.js","AuthComponents/SignUp.js","AuthComponents/AuthControl.js","App.js","AuthComponents/useToken.js","AuthComponents/useGameStarted.js","reportWebVitals.js","index.js"],"names":["Summary","props","useState","summary","setSummary","clueCard","suspects","weapons","rooms","allCards","concat","clueCardShort","forEach","x","useEffect","fetchItems","a","fetch","method","headers","token","data","json","dataReturn","dataArray","clueBreakdown","className","scope","map","key","index","Board","players","setPlayers","tablePrep","setTablePrep","showDetails","setShowDetails","handleTablePrep","array","length","i","smallArray","player","push","arrayItem","playerInfos","Array","from","item","tracking_obj","color","arrayedItem","id","_id","name","toggleShowDetails","ClueCard","value","onClick","OpponentForm","allCardsObj","setName","numberCards","setNumberCards","errors","setErrors","sendData","requestOptions","body","JSON","stringify","is_user_player","number_cards","then","response","undefined","errorArray","msg","refresh","onSubmit","e","preventDefault","htmlFor","onChange","target","type","autoComplete","maxLength","min","max","ClueForm","formObj","setFormObject","getCheckboxes","copy","Object","assign","toggleByKey","event","count","card","setUserNumberCards","arrayFromForm","onSubmitTask","UserForm","showCards","setShowCards","userNumberCards","trackingObj","setTrackingObj","clueBoardObj","PlayerCard","removePlayer","alert","addRemove","window","location","reload","userFormToFalse","PlayerList","removeCount","setRemoveCount","addCount","playerItem","console","log","classForDiv","hidden","Forms","setAddCount","showUserForm","setShowUserForm","increaseAddCount","userFormSubmitted","Header","logOut","sessionStorage","clear","setToken","endGame","setGameStarted","startGame","error","gameStarted","to","AddMove","setMessage","allPlayers","setAllPlayers","setPlayer","request","setRequest","cardShown","setCardShown","allNo","setAllNo","objItem","toggleShowCards","playerId","cardshown","all_no","clueObj","workingRequest","loginUser","credentials","catch","err","Login","username","setUserName","password","setPassword","message","handleSubmit","toggle","signUser","SignUp","AuthControl","signUp","setSignUp","login","setLogin","toggleSignUp","toggleLogin","App","tokenString","getItem","userToken","parse","getToken","setItem","useToken","startedString","getGameStarted","gameStartedMessage","useGameStarted","basename","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8938e3aa.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport '../clueColors.css';\nimport './gameComponents.css';\nimport {Search} from 'react-bootstrap-icons';\n\n\nexport default function Summary (props) {\n    \n    const [summary, setSummary] = useState({});\n    const clueCard = {\n        suspects: ['Mustard', 'Plum', 'Green', 'Peacock', 'Scarlet', 'White'],\n        weapons: ['Knife', 'Candlestick', 'Revolver', 'Rope', 'Lead Pipe', 'Wrench'],\n        rooms:['Hall', 'Lounge', 'Dining Room', 'Kitchen', 'Ballroom', 'Conservatory', 'Billiard Room', 'Library', 'Study'],\n    };\n\n    clueCard.allCards =[].concat(clueCard.suspects, clueCard.weapons, clueCard.rooms);\n    let clueCardShort = {};\n    clueCard.allCards.forEach( x => {\n        clueCardShort[x] = x;\n    });\n    clueCardShort[\"Candlestick\"] = \"Candls.\";\n    clueCardShort[\"Lead Pipe\"] = \"Ld. Pipe\";\n    clueCardShort[\"Dining Room\"] = \"Din. Rm.\";\n    clueCardShort[\"Conservatory\"] = \"Cons.\";\n    clueCardShort[\"Billiard Room\"] = \"Bil. Rm.\";\n\n    useEffect(()=>{\n        fetchItems();\n    },[summary])\n\n    const fetchItems = async () => {\n        const data = await fetch ('https://smart-clue-backend.herokuapp.com/boardSummary', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + props.token },\n        });\n        const dataReturn = await data.json();\n        let dataArray = dataReturn;\n        const clueBreakdown = {};\n        clueCard.allCards.forEach(x => {\n            if (dataArray[x] === null){\n                clueBreakdown[x] = '';\n            } else {\n                clueBreakdown[x] = dataArray[x];\n            }\n        });\n        setSummary(clueBreakdown);\n    }\n\n    return (\n        <div className=\"border-end border-5 clue-table-border-color\">\n        <table className=\"table table-bordered clue-table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Card</th>\n                    <th scope=\"col\" className=\"SearchIcon\"><Search /></th>\n                </tr>\n            </thead>\n            <tbody>\n                {clueCard.allCards.map((key, index) => {\n                    return (\n                        <tr key={71+ index}> \n                            <th scope=\"row\" >{clueCardShort[key]}</th>\n                            <td className=\"playerNameOnTable\">{summary[key]}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport Summary from \"./Summary\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../clueColors.css';\nimport './gameComponents.css';\nimport {Check, X, Question, ThreeDotsVertical} from 'react-bootstrap-icons';\n\nexport default function Board (props) {\n    \n    const [players, setPlayers] = useState([]);\n    const [tablePrep, setTablePrep] = useState([]);\n    const [showDetails, setShowDetails] = useState(false);\n\n    useEffect(()=>{\n        fetchItems();\n        handleTablePrep();\n    },[players])\n\n\n\n    const handleTablePrep = () => {\n        let array = [];\n        if (players.length > 0){\n            props.clueCard.allCards.forEach(i => {\n                let smallArray = [];\n                \n                players.forEach(player => {\n                    smallArray.push (\n                        <td>{player.clueBreakdown[i]}</td>\n                    );\n                });\n                array.push (\n                    <tr>\n                        {smallArray.map ((arrayItem) => {\n                            return arrayItem;\n                        })}\n                    </tr>\n                );\n            });\n            setTablePrep(array);\n        }\n\n    }\n\n\n    const fetchItems = async () => {\n        const data = await fetch ('https://smart-clue-backend.herokuapp.com/board', {\n            method: 'GET',\n            headers: {\n            'Authorization': 'Bearer ' + props.token },\n        });\n        const dataReturn = await data.json();\n        let playerInfos = [];\n        Array.from(dataReturn).forEach(item => {\n            let clueBreakdown = {};\n            props.clueCard.allCards.forEach(i => {\n                if (item.tracking_obj[i] === 0){\n                    clueBreakdown[i] = <Question color=\"lightgrey\"/>;\n                } else if (item.tracking_obj[i] === 1){\n                    clueBreakdown[i] = <Check font-weight=\"bold\" color=\"darkgreen\"/>\n                } else {\n                    clueBreakdown[i] = <X font-weight=\"bold\" color=\"red\"/>\n                }\n            });\n            let arrayedItem = {\n                id: item._id, \n                name: item.name, \n                clueBreakdown: clueBreakdown\n            };\n            playerInfos.push(arrayedItem);\n        })\n        setPlayers(playerInfos);\n    }\n\n    const toggleShowDetails = () => {\n        setShowDetails(!showDetails);\n    }\n    \n    if (showDetails){\n        return (\n            <div className=\"d-flex flex-row bg-clue-secondary padding-2\">\n                <Summary token={props.token} clueCard={props.ClueCard}/> \n                <table className=\"table table-bordered clue-table\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            {players.map((value, index) => {\n                                return (\n                                    <th scope=\"col\" className=\"playerNameOnTable\">{value.name}</th>\n                                )\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tablePrep}\n                    </tbody>\n                </table>\n                <button className=\"no-detail-button expand-close\" onClick={toggleShowDetails}><ThreeDotsVertical /></button>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"d-flex flex-row bg-clue-secondary padding-2\">\n                <Summary token={props.token} clueCard={props.ClueCard}/> \n                <button className=\"no-detail-button expand-close\" onClick={toggleShowDetails}><ThreeDotsVertical /></button>\n            </div>\n        )\n    }\n\n}","import { useState } from \"react\";\nimport './forms.css';\nimport '../clueColors.css';\n\nexport default function OpponentForm (props) {\n    \n    const allCardsObj = {};\n    props.clueCard.allCards.forEach(x => {\n        allCardsObj[x] = 0;\n    });\n    const [name, setName] = useState('');\n    const [numberCards, setNumberCards] = useState(0);\n    const [errors, setErrors] = useState([]);\n    \n\n\n    const onSubmitTask = (event) => {\n        event.preventDefault();\n\n        sendData();\n    }\n\n    const sendData = () => {\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + props.token },\n            body: JSON.stringify({ name: name, tracking_obj: allCardsObj, is_user_player:\"false\", number_cards: numberCards})\n        }\n        \n        fetch('https://smart-clue-backend.herokuapp.com/addPlayer', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            if (data.errors !== undefined){\n                let array = Array.from(data.errors);\n                let errorArray = [];\n                array.forEach(item => {\n                    errorArray.push(item.msg + \"; \")\n                })\n                setErrors(errorArray)\n            } else {\n                setName('');\n                setNumberCards(0);\n                props.refresh();\n            }\n        })\n    }\n   \n    return (\n        <div className=\"card bg-clue-secondary\">\n            <div className='card-body'>\n                <h1>Add Opponent</h1>\n                <form onSubmit ={e => {onSubmitTask(e)}}>\n                    <label htmlFor='name'>Nickname (6 Characters or Less)</label>\n                    <input\n                        onChange={e => setName(e.target.value)}\n                        type='text'\n                        name='name'\n                        className='form-control'\n                        autoComplete='off'\n                        maxLength=\"6\"\n                        value={name}\n                    />\n                    <label htmlFor='cardsNumber'>Number of Cards</label>\n                    <input\n                        onChange={e => setNumberCards(e.target.value)}\n                        type='number'\n                        name='cardsNumber'\n                        className='form-control'\n                        autoComplete='off'\n                        value={numberCards}\n                        min='1'\n                        max='6'\n                    />\n                    <input type=\"submit\" className=\"btn btn-primary record-submit\" value=\"Add Opponent\" />\n                </form>\n            </div> \n            {errors}\n        </div>\n    )\n}","import { useState } from \"react\";\nimport '../clueColors.css';\n\n// This component generates the clue form used to input the user's cards.\n\nexport default function ClueForm (props) {\n    \n    const allCardsObj = {};\n    props.clueCard.allCards.forEach(x => {\n        allCardsObj[x] = false;\n    });\n    \n    const [formObj, setFormObject] = useState(allCardsObj)\n\n    const onSubmitTask = (event) => {\n        event.preventDefault();\n        let count = 0;\n        props.clueCard.allCards.forEach(card => {\n            if (formObj[card]){\n                count++;\n            }\n        });\n        if (props.setUserNumberCards){\n            props.setUserNumberCards(count);\n\n        }\n        props.arrayFromForm(formObj);\n    }\n\n    const toggleByKey = (key) => {\n        let copy = Object.assign({}, formObj);\n        copy[key] = !copy[key];\n        setFormObject(copy);\n    }\n\n    const getCheckboxes = (array) => {\n        return (array.map((value, index) => \n        <div className=\"form-check\">\n            <label htmlFor={value}>{value}</label>\n            <input\n                onChange={e => toggleByKey(value)}\n                type='checkbox'\n                name={value}\n                key={value+\"\"+19*index}\n                className=\"form-check-input\"\n                value={formObj[{value}]}\n            />\n        </div> \n    ));\n    }\n\n    return(\n        <div className=\"bg-clue-secondary\">\n            <form onSubmit ={e => {onSubmitTask(e)}}>\n                <div className=\"form-group\">\n                    <h4>Suspects</h4>\n                    {getCheckboxes(props.clueCard.suspects)}\n                </div>\n                <div className=\"form-group\">\n                    <h4>Weapons</h4>\n                    {getCheckboxes(props.clueCard.weapons)}\n                </div>\n                <div className=\"form-group\">\n                    <h4>Rooms</h4>\n                    {getCheckboxes(props.clueCard.rooms)}\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary record-submit\" value=\"Add Cards\" />\n            </form>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport './forms.css';\nimport ClueForm from \"./ClueForm\";\nimport '../clueColors.css';\n\nexport default function UserForm (props) {\n    \n    const [showCards, setShowCards] = useState(true);\n    const [name, setName] = useState('');\n    const [errors, setErrors] = useState([]);\n    const [userNumberCards, setUserNumberCards] = useState(0);\n\n    const allCardsObj = {};\n    props.clueCard.allCards.forEach(x => {\n        allCardsObj[x] = -1;\n    });\n    const [trackingObj, setTrackingObj] = useState(allCardsObj);\n       \n    const getArrayFromForm = (clueBoardObj) => {\n        \n        let copy = {};\n        props.clueCard.allCards.forEach(card => {\n            copy[card] = ((clueBoardObj[card]) ? 1 : -1);\n        });\n        setTrackingObj(copy);\n        setShowCards(false);\n    }\n\n    const onSubmitTask = (event) => {\n        event.preventDefault();\n        sendData(); \n    }\n\n    const toggleShowCards = () => {\n        setShowCards(!showCards);\n    }\n\n    const sendData = () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + props.token },\n            body: JSON.stringify({ name: name, tracking_obj: trackingObj, is_user_player: \"true\", number_cards: userNumberCards})\n        }\n        fetch('https://smart-clue-backend.herokuapp.com/addPlayer', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            if (data.errors !== undefined){\n                let array = Array.from(data.errors);\n                let errorArray = [];\n                array.forEach(item => {\n                    errorArray.push(item.msg + \"; \")\n                })\n                setErrors(errorArray)\n            } else {\n                setName('');\n                setTrackingObj({});\n                setShowCards(true);\n                props.refresh();\n            }\n        })\n    }\n   \n    if (showCards){\n        return (\n            <div className=\"card bg-clue-secondary\">\n                <div className='card-body'>\n                    <h1>Add User Cards</h1>\n                    <ClueForm arrayFromForm={getArrayFromForm} clueCard={props.clueCard} setUserNumberCards={setUserNumberCards}/>\n                </div>\n                {errors}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"card bg-clue-secondary\">\n                <button onClick={toggleShowCards}>Change cards</button>\n                <div className='card-body'>\n                    <h1>Add User Information</h1>\n                    <form onSubmit ={e => {onSubmitTask(e)}}>\n                        <label htmlFor='name'>Nickname (6 Characters or Less)</label>\n                        <input\n                            onChange={e => setName(e.target.value)}\n                            type='text'\n                            name='name'\n                            className='form-control'\n                            autoComplete='off'\n                            maxLength='6'\n                            value={name}\n                        />\n                        <input type=\"submit\" className=\"btn btn-primary record-submit\" value=\"Add User\" />\n                    </form>\n                </div> \n                {errors}\n            </div>\n        )\n    }\n    \n}","import '../clueColors.css';\nexport default function PlayerCard (props) {\n    \n    const removePlayer = (event) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + props.token },\n            body: JSON.stringify({ _id: props.value.id})\n        }\n        fetch('https://smart-clue-backend.herokuapp.com/removePlayer', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            if(data.errors !== undefined){\n                let array = Array.from(data.errors);\n                let errorArray = [];\n                array.forEach(item => {\n                    errorArray.push(item.msg + \"; \")\n                })\n                alert(errorArray)\n            } else {\n                \n                props.addRemove();\n            }\n            if (props.value.is_user_player){\n                window.location.reload();\n            }            \n            return data;\n        })\n\n    }\n    if (props.value.is_user_player){\n        props.userFormToFalse();\n        return (\n            <div key={props.index *11} className='card player-card'>\n                <p>Name: {props.value.name}</p>\n                <p>Number of Cards: {props.value.number_cards}</p>\n                <button className=\"btn btn-primary w-70\" onClick={removePlayer}>Remove User</button>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div key={props.index *11} className='card player-card'>\n                <p>Name: {props.value[\"name\"]}</p>\n                <p>Number of Cards: {props.value[\"number_cards\"]}</p>\n                <button className=\"btn btn-primary w-70\" onClick={removePlayer}>Remove Player</button>\n            </div>\n        )\n    }\n    \n}","import { useEffect, useState } from \"react\";\nimport '../clueColors.css';\n\nimport PlayerCard from './PlayerCard'\n\nexport default function PlayerList (props) {\n\n        const [players, setPlayers] = useState([]);\n        const [removeCount, setRemoveCount] = useState(0);\n\n        const addRemove = () => {\n            setRemoveCount(removeCount+1)\n        }\n    \n        useEffect(()=>{\n            fetchItems();\n        },[removeCount, props.addCount])\n    \n        const fetchItems = async () => {\n            const data = await fetch ('https://smart-clue-backend.herokuapp.com/board', {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + props.token },\n            });\n            const dataReturn = await data.json();\n            let playerInfos = [];\n            Array.from(dataReturn).forEach(item => {\n                let playerItem = {\n                    id: item._id,\n                    name: item.name,\n                    is_user_player: item.is_user_player,\n                    number_cards: item.number_cards    \n                };\n                console.log(playerItem);\n                playerInfos.push(playerItem);\n            })\n            setPlayers(playerInfos);\n        }\n\n\n        let classForDiv = 'bg-clue-secondary card ' + props.hidden;\n        return (\n            \n            <div className={classForDiv}>\n                <div className=\"card-body\">\n                    <h1>Player List</h1>\n                    {players.map((value, index) => {\n                        return <PlayerCard key={index*17} value={value} index={index} addRemove={addRemove} token={props.token} userFormToFalse={props.userFormToFalse}/>\n                    })}\n                </div>\n            </div>\n        )\n    }","import OpponentForm from './OpponentForm';\nimport UserForm from './UserForm';\nimport PlayerList from \"./PlayerList\"\nimport { useState } from 'react';\nimport '../clueColors.css';\n\nexport default function Forms (props) {\n\n    const clueCard = props.clueCard;\n    const [addCount, setAddCount] = useState(0);\n    const [showUserForm, setShowUserForm] = useState(true);\n\n    const increaseAddCount = () => {\n        setAddCount(addCount + 1);\n    }\n\n    const userFormToFalse = () => {\n        setShowUserForm(false);\n    }\n\n\n    if (showUserForm){\n        return(\n            <div className='row bg-clue-secondary vh-96 padding-2 main-content'>\n                <div className = 'col'>\n                    <UserForm token={props.token} refresh={increaseAddCount} clueCard={clueCard} userFormSubmitted={userFormToFalse}/>\n                </div>            \n                <div className='col playerlist'>\n                    <PlayerList addCount={addCount} token={props.token} hidden={\"hidden\"} userFormToFalse={userFormToFalse}/>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div className='row bg-clue-secondary vh-96 padding-2 main-content'>\n                <div className = 'col'>\n                    <OpponentForm token={props.token}  refresh={increaseAddCount} clueCard={clueCard} />       \n                </div>            \n                <div className='col playerlist'>\n                    <PlayerList addCount={addCount} token={props.token} hidden={\"\"} userFormToFalse={userFormToFalse}/>\n                </div>\n            </div>\n        ) \n    } \n\n}","import { Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../clueColors.css';\nimport './Header.css';\n\nexport default function Header (props) {\n    \n    const logOut = () => {\n        sessionStorage.clear();\n        props.setToken('');\n    }\n\n    const endGame = async () => {\n        const data = await fetch ('https://smart-clue-backend.herokuapp.com/endGame', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + props.token },\n        });\n        const dataReturn = await data.json();\n        props.setGameStarted(false);\n        \n    }\n\n    const startGame = async () => {\n        const data = await fetch ('https://smart-clue-backend.herokuapp.com/startGame', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + props.token },\n        });\n        const dataReturn = await data.json();\n        if (!dataReturn.error) {\n            props.setGameStarted(dataReturn)\n        } else {\n            alert(dataReturn.error)\n        }\n    }\n\n    if (props.gameStarted){\n        return(\n            <div className=\"d-flex justify-content-between bg-clue-primary header\">\n                <div className=\"d-flex padding-05 min-width-300\">\n                    <Link  className=\"text-decoration-none text-clue-primary margin-02 header-hover min-width-150\" to='/addMove'>\n                        <div className=\"header-word-div\" >Add Move</div>\n                    </Link>\n                    <Link className=\"text-decoration-none text-clue-primary margin-02 header-hover min-width-150\" to=\"/\">\n                        <div className=\"header-word-div\">Game Board</div>\n                    </Link>\n                </div>\n                <div className=\"d-flex padding-05 min-width-300\">\n                    <div className=\"text-decoration-none text-clue-primary margin-02-right header-hover min-width-150\" onClick={endGame}><div className=\"header-word-div\">End Game</div></div>\n                    <div className=\"text-decoration-none text-clue-primary margin-02-right header-hover min-width-150\" onClick={logOut}><div className=\"header-word-div\">Log Out</div></div>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"d-flex justify-content-between bg-clue-primary header\">\n                <div className=\"text-decoration-none text-clue-primary margin-02 header-hover min-width-150\" onClick={startGame}>Go to Game</div>\n                <Link className=\"text-decoration-none text-clue-primary margin-02 header-hover min-width-150\" to=\"/\">\n                        <div >Forms</div>\n                </Link>\n                <div className=\"text-decoration-none text-clue-primary margin-02 header-hover min-width-150\" onClick={logOut}><div className=\"header-word-div\">Log Out</div></div>\n            </div>\n        )\n    }\n\n\n\n}","import { useEffect, useState } from \"react\";\nimport ClueForm from \"../FormComponents/ClueForm\";\nimport \"../FormComponents/forms.css\";\nimport '../clueColors.css';\n\nexport default function AddMove (props) {\n    \n    const [showCards, setShowCards] = useState(true);\n    const [message, setMessage] = useState('cards not loaded');\n    const [allPlayers, setAllPlayers] = useState([{}]);\n    const [player, setPlayer] = useState('');\n    const [request, setRequest] = useState([]);\n    const [cardShown, setCardShown] = useState('Unknown');\n    const [allNo, setAllNo] = useState(false);\n    const [errors, setErrors] = useState([]);\n    const clueBreakdown = {};\n    props.clueCard.allCards.forEach(x => {\n        clueBreakdown[x] = null;\n    });\n\n    useEffect(()=>{\n        fetchItems();\n    },[])\n\n    const fetchItems = async () => {\n        const data = await fetch ('https://smart-clue-backend.herokuapp.com/board', {\n            method: 'GET',\n            headers:{\n                'Authorization': 'Bearer ' + props.token,\n            },\n        });\n        const dataReturn = await data.json();\n        let playerInfos = [];\n        Array.from(dataReturn).forEach(item => {\n            let objItem = {\n                id: item._id,\n                name: item.name,\n                numberCards: item.number_cards\n            };\n            playerInfos.push(objItem);\n        });\n        setAllPlayers(playerInfos);\n    }\n\n    const onSelectChange = (event) => {\n        setPlayer(event.target.value);\n    }\n\n    const onAllNoChange = (event) => {\n        setAllNo(event.target.value);\n    }\n\n    const onCardShownChange = (event) => {\n        setCardShown(event.target.value);\n    }\n\n    const clueFormResultHandler = (clueObj) => {\n        let workingRequest = [];\n        props.clueCard.allCards.forEach( x => {\n            if(clueObj[x]){\n                //pushing the name the of the card\n                workingRequest.push(x);\n            }\n        });\n        setRequest(workingRequest);\n        toggleShowCards();\n        setMessage('cards loaded');\n    }\n\n    const toggleShowCards = () => {\n        setShowCards(!showCards)\n    }\n\n\n    const sendData = () => {\n        if (player===\"\"){\n            setErrors('player not selected');\n        } else {\n            if(!(allNo && cardShown!==\"Unknown\")){\n                           \n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + props.token },\n                body: JSON.stringify({ playerId: player, request: request, cardshown: cardShown, all_no: allNo})        }\n                fetch('https://smart-clue-backend.herokuapp.com/addMove', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.errors !== undefined){\n                        let array = Array.from(data.errors);\n                        let errorArray = [];\n                        array.forEach(item => {\n                            errorArray.push(item.msg + \"; \")\n                        })\n                        setErrors(errorArray)\n                    } else {\n                        setPlayer('');\n                        setRequest([]);\n                        setCardShown('Unknown');\n                        setAllNo(false);\n                        setShowCards(true);\n                        setMessage('');\n                    }\n                })\n            }\n            else {\n                alert(\"You selected a card value and noted that no card was shown to you. This will not be submitted.\")\n                window.location.reload();\n            }\n        }\n    }\n\n\n    const onSubmitTask = (event) => {\n        event.preventDefault();\n        sendData();\n    }\n\n    if (showCards){\n       return(\n           <div className=\"card bg-clue-secondary vw-100 vh-96 padding-2\">\n               <h2>What was the suggestion made?</h2>\n               <ClueForm arrayFromForm={clueFormResultHandler} clueCard={props.clueCard}/>\n           </div>\n            \n       ) \n    } else {\n        return (\n            <div className=\"w-50 bg-clue-secondary vh-96 vw-100 padding-2\">\n                <div className=\"d-flex justify-content-between\">\n                    <h2>Suggestion Details</h2>\n                    <button className=\"btn btn-outline-link\" onClick={toggleShowCards}>Change cards?</button>\n                </div>\n                <form onSubmit ={e => {onSubmitTask(e)}}>\n                    <label htmlFor='player'>Player</label>\n                    <select name=\"player\" value={player} className=\"form-select\" onChange={onSelectChange}>\n                       <option></option> \n                       {allPlayers.map((value, index) => {\n                            return <option key={index} value={value.id}>{value.name}</option>\n                        })}\n                    </select>\n                    <label htmlFor='allno'>All No?</label>\n                    <select name=\"allno\" className=\"form-select\" value={allNo} onChange={onAllNoChange}>\n                        <option  value={true}>true</option>\n                        <option  value={false}>false</option>\n                    </select>\n                \n                <label htmlFor='cardShown'>Card Shown</label>\n                    <select name=\"cardShown\" className=\"form-select\" value={cardShown} onChange={onCardShownChange}>\n                        <option value={'Unknown'}>Unknown</option>\n                        {props.clueCard.allCards.map((value, index) => {\n                            return <option key={index} value={value}>{value}</option>\n                        })}\n                    </select>\n                    <input type=\"submit\" className=\"btn btn-primary record-submit\" value=\"Add Move\" />\n                </form>\n                {errors}\n            </div>\n        )\n    }\n    \n}","import React, { useState } from 'react';\nimport './AuthControl.css'\nimport '../clueColors.css';\nimport {X} from 'react-bootstrap-icons';\n\n\n// This is a helper function to log in a user. It is called in the handleSubmit function when a user clicks log in\nasync function loginUser(credentials) {\n  return fetch('https://smart-clue-backend.herokuapp.com/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n  .then(data => data.json())\n  .catch(err => console.log(err));\n}\n\nexport default function Login(props) {\n  \n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    if (token.error){\n      setMessage(token.error);\n    } \n    props.setToken(token);\n  }\n\n    return(\n      <div className=\"login-signup text-clue-primary bg-clue-primary w-100\">\n        <div className='d-flex justify-content-between'>\n        <h3>Log In</h3>\n        <button className=\"btn btn-outline-link text-clue-primary\" onClick={props.toggle}><X/></button>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <label htmlFor='username'>Username</label>\n            <input type=\"text\" name='username' className='form-control' onChange={e => setUserName(e.target.value)} />\n          <label htmlFor='password'>Password</label>\n            <input type=\"password\" className='form-control' onChange={e => setPassword(e.target.value)} />\n        </div>\n        \n        <div className='login-signup-button'>\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n      <div className=\"text-danger\">\n        {message}\n      </div>\n    </div>\n  )\n\n}","import React, { useState } from 'react';\nimport '../clueColors.css';\n\n// this is an async function which signs up a user. It is called in the handleSubmit function which is called when a user clicks sign up.\nasync function signUser(credentials) {\n return fetch('https://smart-clue-backend.herokuapp.com/createNewUser', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n   .then(data => data.json())\n   .catch(err => console.log(err));\n}\n\nexport default function SignUp(props) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await signUser({\n      username,\n      password\n    });\n    if (token.error){\n      setMessage(token.error);\n    } \n    props.setToken(token);\n    console.log(token);\n  }\n\n\n  return(\n    <div className=\"login-signup bg-clue-primary text-clue-primary w-100\">\n      <div className='d-flex justify-content-between'>\n      <h3>Sign Up</h3>\n      <button className=\"btn btn-outline-link text-clue-primary\" onClick={props.toggle}>Back</button>\n    </div>\n    <form onSubmit={handleSubmit}>\n      <div className='form-group'>\n        <label htmlFor='username'>Username</label>\n          <input type=\"text\" name='username' className='form-control' onChange={e => setUserName(e.target.value)} />\n        <label htmlFor='password'>Password</label>\n          <input type=\"password\" className='form-control' onChange={e => setPassword(e.target.value)} />\n      </div>\n      \n      <div className='login-signup-button'>\n        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n      </div>\n    </form>\n    <div className=\"text-danger\">\n      {message}\n    </div>\n  </div>\n)\n}","import { useState } from \"react\";\nimport Login from \"./LoginPage\";\nimport SignUp from \"./SignUp\";\nimport './AuthControl.css'\nimport '../clueColors.css';\n\nexport default function AuthControl (props){\n    const [signUp, setSignUp] = useState(false);\n    const [login, setLogin] = useState(false);\n\n    const toggleSignUp = () => {\n        if (signUp === true) {\n            setSignUp(false);\n        } else {\n            setSignUp(true);\n        }\n    }\n\n    const toggleLogin = () => {\n        if (login === true) {\n            setLogin(false);\n        } else {\n            setLogin(true);\n        }\n    }\n\n    if (login){\n        return(\n            <Login setToken={props.setToken} toggle={toggleLogin}/>\n        )\n    } else if (signUp){\n        return(\n            <SignUp setToken={props.setToken} toggle={toggleSignUp}/>\n        )\n    } else {\n        return(\n            <div className='main-login-section d-flex flex-column justify-content-around text-clue-primary bg-clue-primary'>\n                <h2 className='title d-flex justify-content-around'>Clue Helper</h2>\n                <div className='body-login-section d-flex flex-column justify-content-around align-items-center'>\n                    <button className=' login-signup-button btn btn-primary btn-lg' onClick={toggleSignUp}>Sign Up</button>\n                    <button className=' login-signup-button btn btn-primary btn-lg' onClick={toggleLogin}>Log In</button>\n                </div>\n            </div>\n        )\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Board from './GameComponents/Board';\nimport Forms from './FormComponents/Forms';\nimport Header from './HeaderComponents/Header';\nimport AddMove from './GameComponents/addMove';\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AuthControl from \"./AuthComponents/AuthControl\";\nimport useToken from \"./AuthComponents/useToken\";\nimport useGameStarted from './AuthComponents/useGameStarted';\nimport './clueColors.css';\n\n\nfunction App() {\n\n\n  const { token, setToken } = useToken();\n  const { message, setMessage } = useGameStarted();\n  const clueCard = {\n    suspects: ['Mustard', 'Plum', 'Green', 'Peacock', 'Scarlet', 'White'],\n    weapons: ['Knife', 'Candlestick', 'Revolver', 'Rope', 'Lead Pipe', 'Wrench'],\n    rooms:['Hall', 'Lounge', 'Dining Room', 'Kitchen', 'Ballroom', 'Conservatory', 'Billiard Room', 'Library', 'Study'],\n  };\n  clueCard.allCards =[].concat(clueCard.suspects, clueCard.weapons, clueCard.rooms);\n\n  //If a user is not logged in (i.e. no token), the user cannot view anything besides the login and sign up links\n  if(!token) {\n    return (\n    <div className='log-in-page bg-clue-secondary vh-100'>\n      <div className='d-flex flex-row justify-content-center '>\n        <AuthControl setToken={setToken} />       \n      </div>\n    </div>\n    )\n  }\n\n  if (message){\n    return(\n      <BrowserRouter basename={'/clue-frontend'}>\n        <Header gameStarted={message} setGameStarted={setMessage} token={token} setToken={setToken}/>\n        <Switch>\n            <Route path='/' exact render={(props) => (\n              <Board clueCard={clueCard} token={token} />\n            )} />\n            <Route path='/addMove' exact render={(props) => (\n              <AddMove token={token} clueCard={clueCard}/>\n            )} />\n        </Switch>\n      </BrowserRouter>\n    )\n  } else {\n\n  return(\n    <BrowserRouter basename={'/clue-frontend'}>\n      <Header gameStarted={message} setGameStarted={setMessage} token={token} setToken={setToken}/>\n      <Switch>\n          <Route path='/' exact render={(props) => (\n            <Forms token={token} clueCard={clueCard}/>\n          )} />\n      </Switch>\n    </BrowserRouter>\n  )\n\n  }\n}\n\nexport default App;\n","import { useState } from 'react';\n\n// This component handles the saving a token in sessionStorage, and also assigns the token to the state in App.js\nexport default function useToken() {\n  \n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (userToken) => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","import { useState } from 'react';\n\n\n// This component handles the saving a token in sessionStorage, and also assigns the token to the state in App.js\nexport default function useGameStarted() {\n\n  const getGameStarted = () => {\n    const startedString = sessionStorage.getItem('gameStarted');\n    const gameStarted = JSON.parse(startedString);\n    return gameStarted?.message\n  };\n\n  const [message, setMessage] = useState(getGameStarted());\n\n  const saveMessage = (gameStartedMessage) => {\n    sessionStorage.setItem('gameStarted', JSON.stringify(gameStartedMessage));\n    setMessage(gameStartedMessage.message);\n  };\n\n  return {\n    setMessage: saveMessage,\n    message\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}